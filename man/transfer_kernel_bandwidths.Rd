% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nerv.R
\name{transfer_kernel_bandwidths}
\alias{transfer_kernel_bandwidths}
\title{Set Output Kernel Parameter From Input Results}
\usage{
transfer_kernel_bandwidths(inp, out, method)
}
\arguments{
\item{inp}{Input data.}

\item{out}{Output data.}

\item{method}{Embedding method.}
}
\value{
List containing the updated method.
}
\description{
Updates the output kernel in response to a change in input parameters.
}
\details{
This function is called when the input data has changed. It transfers the
bandwidth parameters from the input data to the output kernel. This is used
in the NeRV family of embedding routines where the precisions of the output
exponential kernel are set to those of the input kernel.

This function expects:
\itemize{
 \item{The \code{inp} list contains a member called \code{beta}.}
 \item{\code{beta} is a vector of numeric parameters with the same length
 as the size of output squared distance matrix.}
 \item{The \code{out$kernel} has a \code{beta} parameter which can make
 use of a vector of parameters.}
}

These conditions are all satisifed if you use an exponential kernel for
creating the input data, and an asymmetric exponential kernel for the output
data, as in the usual NeRV functions. If you deviate from these conditions,
you may get incorrect behavior.
}
\seealso{
Other sneer kernel modifiers: \code{\link{scale_prec_to_perp}}
}

