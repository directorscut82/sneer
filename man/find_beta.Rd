% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perplexity.R
\name{find_beta}
\alias{find_beta}
\title{Find Beta Parameter for One Row of Matrix}
\usage{
find_beta(d2mi, i, perplexity, beta_init = 1, weight_fn, tol = 1e-05,
  max_iters = 50)
}
\arguments{
\item{d2mi}{Row of a squared distance matrix.}

\item{i}{Index of the row in the squared distance matrix.}

\item{perplexity}{Target perplexity value.}

\item{beta_init}{Initial guess for beta.}

\item{weight_fn}{Function which maps squared distances to weights. Should
have the following signature: \code{function(D2i, beta)}}

\item{tol}{Convergence tolerance for perplexity.}

\item{max_iters}{Maximum number of iterations to carry out the search.}
}
\value{
List with the following members:
 \item{\code{pm}}{Matrix with one row containing a probability distribution
 with a perplexity within \code{tol} of \code{perplexity}.}
 \item{\code{beta}}{Beta parameter used with \code{weight_fn} that generated
 \code{pm}.}
 \item{\code{perp}}{Final perplexity of the probability, differing from
 \code{perplexity} only if \code{max_iters} was exceeded.}
 \item{\code{d_intr}}{The intrinsic dimensionality for this perplexity,
 estimated using the final wo guesses in the bisection procedure.}
}
\description{
Find the value of beta that produces a specific perplexity when a row of
a distance matrix is converted to probabilities.
}
\details{
For each point the intrinsic dimensionality is calculated - this is a measure
of the dimensionality local to the point. It is calculated as the derivative
of the Shannon Entropy in bits with respect to the log2 of the beta parameter.
The value reported is that of a finite difference estimate using the value
of beta at the target perplexity and the values calculated at the previous
step of the binary search. If by some miracle the binary search converged
in one step, a second set of values are generated by increasing the converged
beta value by one percent, or adding 1e-3 (whichever results in the smaller
beta value). This procedure assumes a weight function which is exponential
with respect to the squared distances (the usual Guassian similarity kernel
used in most probability-based embeddings). Intrinsic dimensionalities
reported for non-default \code{weight_fn}s should be treated with care.
}

