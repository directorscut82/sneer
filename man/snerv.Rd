% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nerv.R
\name{snerv}
\alias{snerv}
\title{Symmetric Neighbor Retrieval Visualizer (SNeRV)}
\usage{
snerv(eps = .Machine$double.eps, lambda = 0.5, verbose = TRUE)
}
\arguments{
\item{eps}{Small floating point value used to prevent numerical problems,
e.g. in gradients and cost functions.}

\item{lambda}{Weighting factor controlling the emphasis placed on precision
(set \code{lambda} to 0), versus recall (set \code{lambda} to 1). If set to
1, then the method is equivalent to t-SNE. Must be a value between 0 and 1.}

\item{verbose}{If \code{TRUE}, log information about the embedding.}
}
\value{
An embedding method for use by an embedding function.
}
\description{
A probability-based embedding method.
}
\details{
SNeRV is a "symmetric" variant of \code{\link{nerv}}. Rather than use the
conditional point-based probabilities of \code{\link{asne}}, it uses the
joint pair-based probabilities of \code{\link{ssne}}. Empirically, this seems
to provides better convergence behavior when the \code{lambda} parameter is
set to small values. When \code{lambda = 1}, this method is equivalent to
SSNE.

The probability matrix used in SNeRV:

\itemize{
 \item{represents one probability distribution, i.e. the grand sum of the
 matrix is one.}
 \item{is symmetric, i.e. \code{P[i, j] == P[j, i]} and therefore the
 probabilities are joint probabilities.}
}
}
\section{Output Data}{

If used in an embedding, the output data list will contain:
\describe{
 \item{\code{ym}}{Embedded coordinates.}
 \item{\code{qm}}{Joint probability matrix.}
}
}
\examples{
\dontrun{
# default SNeRV settings
embed_prob(method = snerv(lambda = 0.5), ...)

# equivalent to SSNE
embed_prob(method = snerv(lambda = 1), ...)

# puts an emphasis on only keeping true neighbors close together
# tends to produce a larger number of small, tight clusters
embed_prob(method = snerv(lambda = 0), ...)
}
}
\references{
Venna, J., Peltonen, J., Nybo, K., Aidos, H., & Kaski, S. (2010).
Information retrieval perspective to nonlinear dimensionality reduction for
data visualization.

Yang, Z., King, I., Xu, Z., & Oja, E. (2009).
Heavy-tailed symmetric stochastic neighbor embedding.
In \emph{Advances in neural information processing systems} (pp. 2169-2177).
\emph{Journal of Machine Learning Research}, \emph{11}, 451-490.
}
\seealso{
SNeRV uses the \code{\link{nerv_cost}} cost function and the
  \code{\link{exp_weight}} similarity function for converting distances to
  probabilities.
The return value of this function should be used with the
  \code{\link{embed_prob}} embedding function.

Other sneer embedding methods: \code{\link{asne}},
  \code{\link{embedding_methods}}, \code{\link{hsnerv}},
  \code{\link{hssne}}, \code{\link{jse}},
  \code{\link{mmds}}, \code{\link{nerv}},
  \code{\link{rasne}}, \code{\link{rssne}},
  \code{\link{rtsne}}, \code{\link{sammon_map}},
  \code{\link{smmds}}, \code{\link{ssne}},
  \code{\link{tasne}}, \code{\link{tnerv}},
  \code{\link{tsne}}

Other sneer probability embedding methods: \code{\link{asne}},
  \code{\link{hsnerv}}, \code{\link{hssne}},
  \code{\link{jse}}, \code{\link{nerv}},
  \code{\link{probability_embedding_methods}},
  \code{\link{rasne}}, \code{\link{rssne}},
  \code{\link{rtsne}}, \code{\link{ssne}},
  \code{\link{tasne}}, \code{\link{tnerv}},
  \code{\link{tsne}}
}

