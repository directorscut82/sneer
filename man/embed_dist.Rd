% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/embed.R
\name{embed_dist}
\alias{embed_dist}
\title{Distance-Based Embedding.}
\usage{
embed_dist(xm, method = mmds(), preprocess = make_preprocess(verbose =
  verbose), init_inp = NULL, init_out = out_from_PCA(verbose = verbose),
  opt = make_opt(), max_iter = 1000, tricks = make_tricks(),
  reporter = make_reporter(verbose = verbose), export = NULL,
  after_embed = NULL, verbose = TRUE)
}
\arguments{
\item{xm}{A matrix or data frame to embed.}

\item{method}{Embedding method. Set by assigning the result value of one of
the configuration functions listed in
\code{\link{distance_embedding_methods}}.}

\item{preprocess}{Input data preprocess callback. Set by assigning the
result value of \code{\link{make_preprocess}}.}

\item{init_inp}{Input initializer. Set by assigning the result value of
calling one of the available \code{\link{input_initializers}}.}

\item{init_out}{Output initializer. Set by assigning the result value of
calling one of the available \code{\link{output_initializers}}.}

\item{opt}{Optimization method. Set by assigning the result of value of one
of the configuration functions listed in
\code{\link{optimization_methods}}.}

\item{max_iter}{Maximum number of optimization steps to take.}

\item{tricks}{Optional collection of heuristics. Set by assigning the result
value of \code{\link{make_tricks}} or a related wrapper. See
\code{\link{tricks}} for the available tricks.}

\item{reporter}{Reporter callback. Set by assigning the result value of
\code{\link{make_reporter}}.}

\item{export}{Vector of names, specifying data in addition to of the output
data to export provide in the return value. Possible names are:
\describe{
  \item{"\code{inp}"}{The input data, based on the argument passed to
    \code{init_inp}. See the help text for the specific
    \code{\link{input_initializers}} for details.}
  \item{"\code{report}"}{The result of the last report. See the help
    text for \code{\link{make_reporter}} for details.}
  \item{"\code{opt}"}{The optimizer. See the help text for the optimizer
  passed to \code{opt} for details.}
}}

\item{after_embed}{Callback to run on input and output data before output
data is returned.}

\item{verbose}{If \code{TRUE} display messages about the embedding progress.}
}
\value{
The output data. A list containing:
  \item{\code{ym}}{Embedded coordinates.}
  \item{\code{cost}}{The cost value associated with \code{ym}.}
  If the parameter \code{export} was used, additional elements will be
  present. See the help text for the \code{export} parameter for more
  details.
}
\description{
Carry out an embedding of a dataset using a distance-based method
(e.g. Sammon Mapping), with some useful default parameters.
}
\examples{
\dontrun{
# Do metric MDS on the iris data set
# In addition to the STRESS loss function also report the Kruskal Stress
# (often used in MDS applications) and the mean relative error, which can
# be multiplied by 100 and interpreted as a percentage error. Also, use
# the make_iris_plot function, which wrap the make_plot function specifically
# for the iris dataset, which is quite handy for testing.
mds_iris <- embed_dist(iris[, 1:4],
                       method = mmds(),
                       opt = bold_nag(),
                       reporter = make_reporter(
                         extra_costs = c("kruskal_stress",
                                         "mean_relative_error")),
                                         plot = make_iris_plot())

# Sammon map the autoscaled iris data set, which turns out to be a
# surprisingly tough assignment. Increase epsilon substantially to 1e-4 to
# avoid the gradient being overwhelmed by zero distances in the input space.
# Additionally, we report two other normalized stress functions often used
# in MDS. The Sammon mapping cost function is already normalized, so tell the
# make_reporter function not to report an automatically normalized version in
# the output.
sammon_iris <- embed_dist(iris[, 1:4],
                          method = sammon_map(eps = 1e-4),
                          opt = bold_nag(),
                          preprocess = make_preprocess(auto_scale = TRUE),
                          init_out = out_from_rnorm(sd = 1e-4),
                          reporter = make_reporter(normalize_cost = FALSE,
                                       extra_costs = c("normalized_stress",
                                                       "kruskal_stress"),
                                       plot = make_plot(iris, "Species",
                                                           make_label())))
}
}
\seealso{
\itemize{
\item{\code{\link{distance_embedding_methods}}} for configuring
  \code{method}
\item{\code{\link{make_preprocess}}} for configuring \code{preprocess}
\item{\code{\link{input_initializers}}} for configuring \code{init_inp}
\item{\code{\link{output_initializers}}} for configuring \code{init_out}
\item{\code{\link{optimization_methods}}} for configuring \code{opt}
\item{\code{\link{make_tricks}}} for configuring \code{tricks}
\item{\code{\link{make_reporter}}} for configuring \code{reporter}
}

Other sneer embedding functions: \code{\link{embed_prob}}
}

