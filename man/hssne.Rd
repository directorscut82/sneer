% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sne.R
\name{hssne}
\alias{hssne}
\title{Heavy-Tailed Symmetric Stochastic Neighbor Embedding (HSSNE)}
\usage{
hssne(eps = .Machine$double.eps, alpha = 1.5e-08, beta = 1,
  verbose = TRUE)
}
\arguments{
\item{eps}{Small floating point value used to prevent numerical problems,
e.g. in gradients and cost functions.}

\item{alpha}{Tail heaviness. Must be greater than zero. When set to a small
value this method is equivalent to SSNE. When set to one to one, this method
behaves like t-SNE.}

\item{beta}{The precision of the function. Becomes equivalent to the
precision in the Gaussian distribution of distances as \code{alpha}
approaches zero.}

\item{verbose}{If \code{TRUE}, log information about the embedding.}
}
\value{
An embedding method for use by an embedding function.
}
\description{
A probability-based embedding method.
}
\details{
HSSNE is a generalization of \code{\link{ssne}} and \code{\link{tsne}},
which uses the \code{\link{heavy_tail_weight}} similarity function to
generate its probabilities.

The heavy tailedness of the weighting function is controlled by the parameter
\eqn{\alpha}{alpha}, As \eqn{\alpha \to 0}{alpha approaches 0}, the weighting
function becomes exponential (like SSNE). At \eqn{\alpha = 1}{alpha = 1},
the weighting function is the t-distribution with one degree of freedom
(t-SNE). Increasing \eqn{\alpha}{alpha} further will take you into the realm
of functions with even heavier tails.

Additionally, HSSNE allows control over \eqn{\beta}{beta}, the degree of
precision (inverse of the spread) of the function. Normally, this set to one
for the output distances in t-SNE and related methods.

The probability matrix used in HSSNE:

\itemize{
 \item{represents one probability distribution, i.e. the grand sum of the
 matrix is one.}
 \item{is symmetric, i.e. \code{P[i, j] == P[j, i]} and therefore the
 probabilities are joint probabilities.}
}
}
\section{Output Data}{

If used in an embedding, the output data list will contain:
\describe{
 \item{\code{ym}}{Embedded coordinates.}
 \item{\code{qm}}{Joint probability matrix based on the weight matrix
 \code{wm}.}
 \item{\code{wm}}{Weight matrix generated from the distances between points
 in \code{ym}.}
}
}
\examples{
\dontrun{
embed_prob(method = hssne(), ...)
}
}
\references{
Yang, Z., King, I., Xu, Z., & Oja, E. (2009).
Heavy-tailed symmetric stochastic neighbor embedding.
In \emph{Advances in neural information processing systems} (pp. 2169-2177).
}
\seealso{
HSSNE uses the \code{\link{heavy_tail_weight}} similarity function.
The return value of this function should be used with the
\code{\link{embed_prob}} embedding function.

Other sneer embedding methods: \code{\link{asne}},
  \code{\link{embedding_methods}}, \code{\link{hsnerv}},
  \code{\link{mmds}}, \code{\link{nerv}},
  \code{\link{sammon_map}}, \code{\link{smmds}},
  \code{\link{snerv}}, \code{\link{ssne}},
  \code{\link{tasne}}, \code{\link{tnerv}},
  \code{\link{tsne}}

Other sneer probability embedding methods: \code{\link{asne}},
  \code{\link{hsnerv}}, \code{\link{nerv}},
  \code{\link{probability_embedding_methods}},
  \code{\link{snerv}}, \code{\link{ssne}},
  \code{\link{tasne}}, \code{\link{tnerv}},
  \code{\link{tsne}}
}

