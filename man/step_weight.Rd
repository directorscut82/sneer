% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distance_weight.R
\name{step_weight}
\alias{step_weight}
\title{Step Weight}
\usage{
step_weight(d2m, beta = 1)
}
\arguments{
\item{d2m}{Matrix of squared distances.}

\item{beta}{step cutoff parameter.}
}
\value{
Weight matrix.
}
\description{
A similarity function for probability-based embedding.
}
\details{
This function returns a value of one for input data less than or equal to
the beta parameter, and zero otherwise.

Useful for emulating a k-nearest neighbor style of weighting, as favored by
Yang and co-workers (see the publication list). Note that the value of beta
of beta is clamped so that it can't be smaller than the smallest value in the
input matrix. This is to stop the output weights all being zero, which
results in a uniform probability and hence a large perplexity. This can
cause problems for the bisection search used to find the target perplexity.
}
\references{
Yang, Z., Peltonen, J., & Kaski, S. (2014).
Optimization equivalence of divergences improves neighbor embedding.
In \emph{Proceedings of the 31st International Conference on Machine Learning (ICML-14)}
(pp. 460-468).

Yang, Z., Peltonen, J., & Kaski, S. (2015).
Majorization-Minimization for Manifold Embedding.
In \emph{AISTATS}.
}
\seealso{
Other sneer weight functions: \code{\link{exp_weight}},
  \code{\link{heavy_tail_weight}},
  \code{\link{sqrt_exp_weight}}, \code{\link{tdist_weight}}
}

