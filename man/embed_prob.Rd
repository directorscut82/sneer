% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/embed.R
\name{embed_prob}
\alias{embed_prob}
\title{Probability-Based Embedding}
\usage{
embed_prob(xm, method = tsne(), preprocess = make_preprocess(verbose =
  verbose), init_inp = inp_from_perp(perplexity = 30, input_weight_fn =
  exp_weight, verbose = verbose), init_out = out_from_PCA(verbose = verbose),
  opt = make_opt(), max_iter = 1000, tricks = NULL,
  reporter = make_reporter(verbose = verbose), export = NULL,
  after_embed = NULL, verbose = TRUE)
}
\arguments{
\item{xm}{A matrix or data frame to embed.}

\item{method}{Embedding method. Set by assigning the result value of one of
the configuration functions listed in
\code{\link{probability_embedding_methods}}.}

\item{preprocess}{Input data preprocess callback. Set by assigning the
result value of \code{\link{make_preprocess}}.}

\item{init_inp}{Input initializer. Set by assigning the result value of
calling one of the available \code{\link{input_initializers}}.}

\item{init_out}{Output initializer. Set by assigning the result value of
calling one of the available \code{\link{output_initializers}}.}

\item{opt}{Optimization method. Set by assigning the result of value of one
of the configuration functions listed in
\code{\link{optimization_methods}}.}

\item{max_iter}{Maximum number of optimization steps to take.}

\item{tricks}{Optional collection of heuristics. Set by assigning the result
value of \code{\link{make_tricks}} or a related wrapper. See
\code{\link{tricks}} for the available tricks.}

\item{reporter}{Reporter callback. Set by assigning the result value of
\code{\link{make_reporter}}.}

\item{export}{Vector of names, specifying data in addition to of the output
data to export provide in the return value. Possible names are:
\describe{
  \item{"\code{inp}"}{The input data, based on the argument passed to
    \code{init_inp}. See the help text for the specific
    \code{\link{input_initializers}} for details.}
  \item{"\code{report}"}{The result of the last report. See the help
    text for \code{\link{make_reporter}} for details.}
  \item{"\code{opt}"}{The optimizer. See the help text for the optimizer
  passed to \code{opt} for details.}
}
For each name supplied, an item with that name will appear in the return
value list.}

\item{after_embed}{Callback to run on input and output data before output
data is returned.}

\item{verbose}{If \code{TRUE} display messages about the embedding progress.}
}
\value{
The output data. A list containing:
  \item{\code{ym}}{Embedded coordinates.}
  \item{\code{cost}}{The cost value associated with \code{ym}.}
  If the parameter \code{export} was used, additional elements will be
  present. See the help text for the \code{export} parameter for more
  details.
}
\description{
Carry out an embedding of a dataset using a probability-based method
(e.g. t-SNE), with some useful default parameters.
}
\examples{
\dontrun{
# Do t-SNE on the iris dataset with the same options as the t-SNE paper
# except initialize from PCA so output is repeatable.
# plot 2D result during embedding with convenience function for iris plot.
# Default method is tsne. Set perplexity to 25.
tsne_iris <- embed_prob(iris[, 1:4], opt = tsne_opt(),
               init_inp = inp_from_perp(perplexity = 25),
               tricks = tsne_tricks(),
               reporter = make_reporter(plot = make_iris_plot()))

# Do t-SNE on the iris dataset with the same options as the t-SNE paper
# and initialize from a random normal distribution. Use generic plot
# function, displaying the first two characters of the "Species" factor for
# the points. Explicitly choose t-SNE as the method.
tsne_iris <- embed_prob(iris[, 1:4],
               method = tsne(),
               opt = tsne_opt(),
               init_inp = inp_from_perp(perplexity = 25),
               init_out = out_from_rnorm(sd = 1e-4),
               tricks = tsne_tricks(),
               reporter = make_reporter(
                 plot = make_plot(iris, "Species", make_label(2))))

# Use the SSNE method, and preprocess input data by range scaling. t-SNE
# tricks and optimization are reasonable defaults for other probability-based
# embeddings. Initialize from a uniform distribution.
ssne_iris <- embed_prob(iris[, 1:4],
               method = ssne(),
               opt = tsne_opt(),
               init_inp = inp_from_perp(perplexity = 25),
               preprocess = make_preprocess(range_scale_matrix = TRUE),
               init_out = out_from_runif(),
               tricks = tsne_tricks(),
               reporter = make_reporter(
                 plot = make_plot(iris, "Species", make_label(2))))

# ASNE method on the s1k dataset (10 overlapping 9D Gaussian blobs),
# Set perplexity for input initialization to 50, initialize with PCA scores,
# preprocess by autoscaling columns, optimize
# with Nesterov Accelrated Gradient and bold driver step size
# (highly recommended as an optimizer). Labels for s1k are one digit, so
# can use simplified plot function.
asne_s1k <- embed_prob(s1k[, 1:9], method = asne(),
 preprocess = make_preprocess(auto_scale = TRUE),
 init_inp = inp_from_perp(perplexity = 50),
 init_out = out_from_PCA(),
 opt = make_opt(gradient = nesterov_gradient(), step_size = bold_driver(),
  update = nesterov_nsc_momentum()),
  reporter = make_reporter(plot = make_plot(s1k, "Label")))

# Same as above, but using convenience method to create optimizer with less
# typing
asne_s1k <- embed_prob(s1k[, 1:9], method = asne(),
 preprocess = make_preprocess(auto_scale = TRUE),
 init_inp = inp_from_perp(perplexity = 50),
 init_out = out_from_PCA(),
 opt = bold_nagger(),
 reporter = make_reporter(plot = make_plot(s1k, "Label")))
}
}
\seealso{
\itemize{
\item{\code{\link{probability_embedding_methods}}} for configuring
  \code{method}
\item{\code{\link{make_preprocess}}} for configuring \code{preprocess}
\item{\code{\link{input_initializers}}} for configuring \code{init_inp}
\item{\code{\link{output_initializers}}} for configuring \code{init_out}
\item{\code{\link{optimization_methods}}} for configuring \code{opt}
\item{\code{\link{make_tricks}}} for configuring \code{tricks}
\item{\code{\link{make_reporter}}} for configuring \code{reporter}
}

Other sneer embedding functions: \code{\link{embed_dist}}
}

