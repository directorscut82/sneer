% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/embed.R
\name{embed_prob}
\alias{embed_prob}
\title{Probability-Based Embedding}
\usage{
embed_prob(xm, mat_name = "ym", preprocess = make_preprocess(verbose =
  verbose), init_inp = make_init_inp(perplexity = 30, input_weight_fn =
  exp_weight, verbose = verbose), init_out = make_init_out(from_PCA = TRUE,
  mat_name = mat_name, verbose = verbose), method = tsne(),
  opt = make_opt(mat_name = mat_name), max_iter = 1000, tricks = NULL,
  reporter = make_reporter(verbose = verbose), export = NULL,
  after_embed = NULL, verbose = TRUE)
}
\arguments{
\item{xm}{A matrix or data frame to embed.}

\item{mat_name}{Name of the matrix in the output data list that will contain
the embedded coordinates.}

\item{preprocess}{Input data preprocess callback. Set by assigning the
result value of \code{\link{make_preprocess}}.}

\item{init_inp}{Input initialization callback. Set by assigning the result
value of \code{\link{make_init_inp}}.}

\item{init_out}{Output initialization callback. Set by assigning the result
value of \code{\link{make_init_out}}.}

\item{method}{Embedding method. Set by assigning the result value of one of
the configuration functions listed in
\code{\link{probability_embedding_methods}}.}

\item{opt}{Optimization method. Set by assigning the result of value of one
of the configuration functions listed in
\code{\link{optimization_methods}}.}

\item{max_iter}{Maximum number of optimization steps to take.}

\item{tricks}{Optional collection of heuristics. Set by assigning the result
value of \code{\link{make_tricks}} or a related wrapper. See
\code{\link{tricks}} for the available tricks.}

\item{reporter}{Reporter callback. Set by assigning the result value of
\code{\link{make_reporter}}.}

\item{export}{Vector of names to export. Possible names are:
\describe{
  \item{"\code{inp}"}{The input data.}
  \item{"\code{report}"}{The result of the last report.}
}}

\item{after_embed}{Callback to run on input and output data before output
data is returned.}

\item{verbose}{If \code{TRUE} display messages about the embedding progress.}
}
\value{
The output data. A list containing:
  \item{\code{ym}}{Embedded coordinates. This name can be changed by
    specifying \code{mat_name}.}
  \item{\code{qm}}{Probability matrix generated from the weight matrix
    \code{wm}.}
  \item{\code{wm}}{Weight matrix generated from the distances between points
    in \code{ym}.}
  \item{\code{inp}}{The input data, if "\code{inp}" is included in the
    \code{export} list parameter.}
  \item{\code{report}}{Most recent report, if
    "\code{report}" is included in the \code{export} list parameter.}
If the \code{inp} list is present, it contains:
 \item{\code{xm}}{The (potentially preprocessed) input coordinates if the
   input data was not a distance matrix.}
 \item{\code{dm}}{Input distance matrix.}
 \item{\code{pm}}{Input probabilities.}
 \item{\code{beta}}{Input weighting parameters. Only present if
    \code{make_init_inp} is called with \code{keep_all_results} set to
    \code{TRUE} in when creating the callback \code{init_inp}.}
If the \code{report} list is present, it contains:
  \item{\code{stop_early}}{If \code{TRUE}, the optimization stopped before
    \code{max_iters} was reached.}
  \item{\code{cost}}{Cost of the embedded configuration in the most recent
    iteration.}
  \item{\code{costs}}{Matrix of all report costs and the iterations at which
    they occurred. Only present if \code{keep_costs} is set to \code{TRUE}
    when the \code{make_reporter} factory function is called.}
  \item{\code{reltol}}{Relative tolerance of the difference between present
    cost and the cost from the previous report.}
  \item{\code{norm}}{Normalized cost for the most recent iteration. Only
    present if \code{normalize_cost} is set to \code{TRUE} when the
    \code{make_reporter} factory function is called.}
  \item{\code{iter}}{The iteration at which the report is generated.}
}
\description{
Carry out an embedding of a dataset using a probability-based method
(e.g. t-SNE), with some useful default parameters.
}
\examples{
\dontrun{
# Do t-SNE on the iris dataset with the same options as the t-SNE paper
# except initialize from PCA so output is repeatable.
# plot 2D result during embedding with convenience function for iris plot.
# Default method is tsne. Set perplexity to 25.
tsne_iris <- embed_prob(iris[, 1:4], opt = tsne_opt(),
               init_inp = make_init_inp(perplexity = 25),
               tricks = tsne_tricks(),
               reporter = make_reporter(plot_fn = make_iris_plot()))

# Do t-SNE on the iris dataset with the same options as the t-SNE paper
# and initialize from random. Use generic plot function, displaying the first
# two characters of the "Species" factor for the points. Explicitly choose
# t-SNE as the method.
tsne_iris <- embed_prob(iris[, 1:4],
               method = tsne(),
               opt = tsne_opt(),
               init_inp = make_init_inp(perplexity = 25),
               init_out = make_init_out(stdev = 1e-4),
               tricks = tsne_tricks(),
               reporter = make_reporter(
                 plot_fn = make_plot(iris, "Species", make_label(2))))

# Use the SSNE method, and preprocess input data by range scaling. t-SNE
# tricks and optimization are reasonable defaults for other probability-based
# embeddings.
ssne_iris <- embed_prob(iris[, 1:4],
               method = ssne(),
               opt = tsne_opt(),
               init_inp = make_init_inp(perplexity = 25),
               preprocess = make_preprocess(range_scale_matrix = TRUE),
               init_out = make_init_out(stdev = 1e-4),
               tricks = tsne_tricks(),
               reporter = make_reporter(
                 plot_fn = make_plot(iris, "Species", make_label(2))))

# ASNE method on the s1k dataset (10 overlapping 9D Gaussian blobs),
# Set perplexity for input initialization to 50, initialize with PCA scores,
# preprocess by autoscaling columns, optimize
# with Nesterov Accelrated Gradient and bold driver step size
# (highly recommended as an optimizer). Labels for s1k are one digit, so
# can use simplified plot function.
asne_s1k <- embed_prob(s1k[, 1:9], method = asne(),
 preprocess = make_preprocess(auto_scale = TRUE),
 init_inp = make_init_inp(perplexity = 50),
 init_out = make_init_out(from_PCA = TRUE),
 opt = make_opt(gradient = nesterov_gradient(), step_size = bold_driver(),
  update = nesterov_nsc_momentum()),
  reporter = make_reporter(plot_fn = make_plot(s1k, "Label")))

# Same as above, but using convenience method to create optimizer with less
# typing
asne_s1k <- embed_prob(s1k[, 1:9], method = asne(),
 preprocess = make_preprocess(auto_scale = TRUE),
 init_inp = make_init_inp(perplexity = 50),
 init_out = make_init_out(from_PCA = TRUE),
 opt = bold_nag_opt(),
 reporter = make_reporter(plot_fn = make_plot(s1k, "Label")))
}
}
\seealso{
\itemize{
\item{\code{\link{probability_embedding_methods}}} for configuring
  \code{method}
\item{\code{\link{make_preprocess}}} for configuring \code{preprocess}
\item{\code{\link{make_init_inp}}} for configuring \code{init_inp}
\item{\code{\link{make_init_out}}} for configuring \code{init_out}
\item{\code{\link{optimization_methods}}} for configuring \code{opt}
\item{\code{\link{make_tricks}}} for configuring \code{tricks}
\item{\code{\link{make_reporter}}} for configuring \code{reporter}
}

Other sneer embedding functions: \code{\link{embed_dist}}
}

