% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distance_cost.R
\name{rms_metric_stress_cost}
\alias{rms_metric_stress_cost}
\title{STRESS RMSD Cost Function}
\usage{
rms_metric_stress_cost(inp, out, method)
}
\arguments{
\item{inp}{Input data.}

\item{out}{Output data.}

\item{method}{Embedding method.}
}
\value{
RMS deviation of the input and output distances.
}
\description{
A measure of embedding quality between input and output data.
}
\details{
The RMS stress is the square root of the normalized
\code{\link{metric_stress_cost}}:

\deqn{STRESS_{RMS} = \sqrt{\frac{2\times STRESS}{n(n-1)}}}{stress_rms = sqrt[(2*STRESS)/(n*(n-1))]}

The normalization divides the metric stress by
\eqn{0.5\times n(n-1)}{0.5*n*(n-1)}, where
\eqn{n} is the number of points in the distance matrix and hence the
normalization factor accounts for the number of unique distances (ignoring
self distances) in the matrix. The square root puts the units of the stress
back into that of the original distances.

This cost function requires the following matrices to be defined:
\describe{
 \item{\code{inp$dm}}{Input distances.}
 \item{\code{out$dm}}{Output distances.}
}
}
\seealso{
Other sneer cost functions: \code{\link{jse_cost}},
  \code{\link{kl_cost}}, \code{\link{kruskal_stress_cost}},
  \code{\link{mean_relative_error_cost}},
  \code{\link{metric_sstress_cost}},
  \code{\link{metric_stress_cost}},
  \code{\link{nerv_cost}},
  \code{\link{normalized_stress_cost}},
  \code{\link{reverse_kl_cost}},
  \code{\link{sammon_stress_cost}},
  \code{\link{sammon_stress_unnorm_cost}}
}

