% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim.R
\name{make_opt_validate}
\alias{make_opt_validate}
\title{Create solution validation callback.}
\usage{
make_opt_validate(direction_fn = NULL, step_size_fn = NULL,
  update_fn = NULL)
}
\arguments{
\item{direction_fn}{Validation function for the direction method.}

\item{step_size_fn}{Validation function for the step size method.}

\item{update_fn}{Validation function for the update method.}
}
\value{
A validation callback.
}
\description{
Makes a callback to be used by the optimizer to validate a solution.
}
\details{
The direction, step size or update part of the optimization step can "veto"
a particular solution if it's not to their liking. For example, the bold
driver step size method will flag an update as not ok if the cost increases.
If the solution does not validate, then it will not be applied to the
solution and the next iteration step takes place from the same position as
the current iteration. Therefore it's important that the state of the
optimizer also be changed if the validation has failed or the same failure
will occur again. For example, in the case of the bold driver, a failed
solution results in the step size being decreased.

The callback, when invoked, will call the validation functions provided by
the different components of the optimizer. If any of them return \code{FALSE}
the the validation callback will indicate the step failed.
}

