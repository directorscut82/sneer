% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cost.R
\name{make_normalized_cost_fn}
\alias{make_normalized_cost_fn}
\title{Create Cost Function Normalizer}
\usage{
make_normalized_cost_fn(cost_fn)
}
\arguments{
\item{cost_fn}{Cost function to normalize.}
}
\value{
Normalized cost function with the signature
 \code{norm_fn(inp, out, method)} and which returns a scalar numeric cost
 value.
}
\description{
A function to transform a cost function into a normalized cost function.
}
\details{
The cost function can be any function where the more positive the value,
the worse the solution is considered to be. The corresponding normalized
version is that which scales the cost so that a "null" model would give a
normalized cost of 1.0.

The definition of a "null" model is one which is as good as can be if one
didn't use any information from the data at all. For methods that attempt
to preserve distances, this would be equivalent to making all the embedded
distances the same, which can only be achieved by making them all zero. For
probability-based methods, the equivalent would be to make all the
probabilities equal.

The cost function should have the signature \code{cost_fn(inp, out, method)}
and return a scalar numeric cost value. In addition it should have an
appropriate \code{sneer_cost_type} attribute set. For cost functions that act
on probabilities, this should be \code{"prob"}. For cost function that act on
distances, this should be \code{"dist"}.

Note that this function will attempt to synthesize a function to calculate
a suitable normalization value, but isn't very sophisticated: it simply sets
the output probabilities or distances (depending on the type of the cost)
function to a uniform value. If this is insufficiently clever, you can set
the a \code{sneer_cost_norm} attribute instead. The value of this attribute
should be the name of a separate cost function which does the normalization
explicitly. In this case, the function won't attempt to synthesize a
function, but will return that custom function instead.
}

