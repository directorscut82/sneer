% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plugin.R
\name{plugin}
\alias{plugin}
\title{Factory Function Using the Plugin Gradient of Lee and co-workers}
\usage{
plugin(cost = kl_fg(), kernel = exp_kernel(),
  stiffness_fn = plugin_stiffness, update_out_fn = make_update_out(keep =
  c("qm", "wm", "d2m")), inp_updated_fn = NULL, out_updated_fn = NULL,
  after_init_fn = NULL, prob_type = "joint", eps = .Machine$double.eps,
  verbose = TRUE)
}
\arguments{
\item{cost}{Cost for this embedding method.}

\item{kernel}{Similarity kernel for weight generation.}

\item{stiffness_fn}{Stiffness function appropriate for a plugin.}

\item{update_out_fn}{Function to run when embedding coordinates are updated.}

\item{inp_updated_fn}{Optional custom function to run when the input data
changes (e.g. if input perplexities have changed).
 \code{update_out_fn} runs.}

\item{out_updated_fn}{Optional custom function to run after
\code{update_out_fn} runs.}

\item{after_init_fn}{Optional function to run after initialization has
occurred.}

\item{prob_type}{Type of probability matrix used by the probability matrix,
e.g. "joint" or "row".}

\item{eps}{Small floating point value used to prevent numerical problems,
e.g. in gradients and cost functions.}

\item{verbose}{If \code{TRUE}, log information about the embedding.}
}
\value{
An embedding method for use by an embedding function.
}
\description{
An embedding method factory function.
}
\details{
Lee and co-workers derived a generic gradient for probability-based
embeddings in the appendix of their JSE paper. You need to provide two
things:

\enumerate{
  \item{The gradient of the cost function with respect to the probability.}
  \item{The gradient of the weight with respect to the squared distances.}
}

In return, you can now get the gradient of the cost function with respect
to the embedding coordinates without having to deal with pesky chain rules
for partial differentiation. In particular, you don't have to write your
own definition of the stiffness function.

There is a catch: depending on your definition of the weight kernel function
and cost function, the plugin gradient could simplify to a much less complex
expression. So the plugin gradient might be a lot slower (and less
numerically accurate).
}
\references{
Lee, J. A., Renard, E., Bernard, G., Dupont, P., & Verleysen, M. (2013).
Type 1 and 2 mixtures of Kullback-Leibler divergences as cost functions in
dimensionality reduction based on similarity preservation.
\emph{Neurocomputing}, \emph{112}, 92-108.
}
\seealso{
Other sneer embedding methods: \code{\link{asne_plugin}},
  \code{\link{asne}}, \code{\link{embedding_methods}},
  \code{\link{hsjse_plugin}}, \code{\link{hsjse}},
  \code{\link{hsnerv_plugin}}, \code{\link{hsnerv}},
  \code{\link{hssne_plugin}}, \code{\link{hssne}},
  \code{\link{jse_plugin}}, \code{\link{jse}},
  \code{\link{mmds}}, \code{\link{nerv_plugin}},
  \code{\link{nerv}}, \code{\link{rasne_plugin}},
  \code{\link{rasne}}, \code{\link{rssne_plugin}},
  \code{\link{rssne}}, \code{\link{rtsne_plugin}},
  \code{\link{rtsne}}, \code{\link{sammon_map}},
  \code{\link{sjse_plugin}}, \code{\link{sjse}},
  \code{\link{smmds}}, \code{\link{snerv_plugin}},
  \code{\link{snerv}}, \code{\link{ssne_plugin}},
  \code{\link{ssne}}, \code{\link{tasne_plugin}},
  \code{\link{tasne}}, \code{\link{tnerv_plugin}},
  \code{\link{tnerv}}, \code{\link{tsne_plugin}},
  \code{\link{tsne}}, \code{\link{uhsnerv_plugin}},
  \code{\link{uhsnerv}}, \code{\link{unerv_plugin}},
  \code{\link{unerv}}, \code{\link{usnerv_plugin}},
  \code{\link{usnerv}}

Other sneer probability embedding methods: \code{\link{asne_plugin}},
  \code{\link{asne}}, \code{\link{hsjse_plugin}},
  \code{\link{hsjse}}, \code{\link{hsnerv_plugin}},
  \code{\link{hsnerv}}, \code{\link{hssne_plugin}},
  \code{\link{hssne}}, \code{\link{jse_plugin}},
  \code{\link{jse}}, \code{\link{nerv_plugin}},
  \code{\link{nerv}},
  \code{\link{probability_embedding_methods}},
  \code{\link{rasne_plugin}}, \code{\link{rasne}},
  \code{\link{rssne_plugin}}, \code{\link{rssne}},
  \code{\link{rtsne_plugin}}, \code{\link{rtsne}},
  \code{\link{sjse_plugin}}, \code{\link{sjse}},
  \code{\link{snerv_plugin}}, \code{\link{snerv}},
  \code{\link{ssne_plugin}}, \code{\link{ssne}},
  \code{\link{tasne_plugin}}, \code{\link{tasne}},
  \code{\link{tnerv_plugin}}, \code{\link{tnerv}},
  \code{\link{tsne_plugin}}, \code{\link{tsne}},
  \code{\link{uhsnerv_plugin}}, \code{\link{uhsnerv}},
  \code{\link{unerv_plugin}}, \code{\link{unerv}},
  \code{\link{usnerv_plugin}}, \code{\link{usnerv}}
}

