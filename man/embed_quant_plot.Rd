% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{embed_quant_plot}
\alias{embed_quant_plot}
\title{Embedding Plot, Numerical Color Scale}
\usage{
embed_quant_plot(coords, quant_vec, name = "Blues", num_colors = 15,
  limits = NULL, cex = 0.5, top = NULL)
}
\arguments{
\item{coords}{Matrix of embedded coordinates, with as many rows as
observations, and 2 columns.}

\item{quant_vec}{Vector containing quantitative information which will
be converted to a color. Each value will be applied to the equivalent
row in \code{coords}.}

\item{name}{Name of the ColorBrewer palette to use for visualizing
\code{quant_vec}.}

\item{num_colors}{Number of unique colors to map values in \code{quant_vec}
to.}

\item{limits}{The range that the colors should map over. If not specified,
then the range of \code{x}. This is useful if there is some external
absolute scale that should be used.}

\item{cex}{Size of the points.}

\item{top}{If not \code{NULL}, only the specified number of points will be
displayed, corresponding to those with the highest values in \code{vec},
after sorting by decreasing order.}
}
\description{
Plots the embedded coordinates, using a ColorBrewer palette to color each
point according to a numerical vector.
}
\note{
Use of this function requires that the \code{RColorBrewer} package be
 installed.
}
\examples{
\dontrun{
tsne_iris <- sneer(iris, method = "tsne", scale_type = "a", ret = c("dx", "dy", "deg"))
# how well is the 32 nearest neighborhood preserved for each point?
nbr_pres_32 <- nbr_pres(tsne_iris$dx, tsne_iris$dy, 32)
# visualize preservation, use absolute scale of 0-1 for colors.
embed_quant_plot(tsne_iris$coords, nbr_pres_32, limits = c(0, 1))

# visualize 10 points with the hightest degree centrality
embed_quant_plot(tsne_iris$coords, tsne_iris$deg, top = 10)
}
}
\seealso{
More information on ColorBrewer is available at its website,
\url{http://www.colorbrewer2.org}.
}

