% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nerv.R
\name{unerv}
\alias{unerv}
\title{NeRV with uniform bandwidth (UNeRV)}
\usage{
unerv(lambda = 0.5, beta = 1, eps = .Machine$double.eps, verbose = TRUE)
}
\arguments{
\item{lambda}{Weighting factor controlling the emphasis placed on precision
(set \code{lambda} to 0), versus recall (set \code{lambda} to 1). If set to
1, then the method is equivalent to ASNE. Must be a value between 0 and 1.}

\item{beta}{Controls the "bandwidth" of the exponential similarity kernel
function. Leave at the default value of 1 to compare with SSNE and ASNE.}

\item{eps}{Small floating point value used to prevent numerical problems,
e.g. in gradients and cost functions.}

\item{verbose}{If \code{TRUE}, log information about the embedding.}
}
\value{
An embedding method for use by an embedding function.
}
\description{
This method behaves like \code{nerv} in terms of its cost function,
but treats the output weighting function like \code{asne} and
\code{ssne} by setting the weight function bandwidth parameter
\code{beta} to 1. If you want to compare the NeRV cost function with the ASNE
cost function directly, UNeRV is a better method to use than NeRV.
}
\seealso{
\code{nerv} uses the precisions that generated the input
probability as a way to reflect the differences in the local density of
points in the input space in the output embedding.
The return value of this function should be used with the
\code{embed_prob} embedding function.

Other sneer embedding methods: \code{\link{asne_plugin}},
  \code{\link{asne}}, \code{\link{hsjse_plugin}},
  \code{\link{hsnerv_plugin}}, \code{\link{hsnerv}},
  \code{\link{hssne_plugin}}, \code{\link{hssne}},
  \code{\link{jse_plugin}}, \code{\link{nerv_plugin}},
  \code{\link{nerv}}, \code{\link{plugin}},
  \code{\link{rasne_plugin}}, \code{\link{rasne}},
  \code{\link{rssne_plugin}}, \code{\link{rssne}},
  \code{\link{rtsne_plugin}}, \code{\link{rtsne}},
  \code{\link{sjse_plugin}}, \code{\link{snerv_plugin}},
  \code{\link{snerv}}, \code{\link{ssne_plugin}},
  \code{\link{ssne}}, \code{\link{tasne_plugin}},
  \code{\link{tasne}}, \code{\link{tnerv_plugin}},
  \code{\link{tnerv}}, \code{\link{tsne_plugin}},
  \code{\link{tsne}}, \code{\link{uhsnerv_plugin}},
  \code{\link{uhsnerv}}, \code{\link{unerv_plugin}},
  \code{\link{usnerv_plugin}}, \code{\link{usnerv}}

Other sneer probability embedding methods: \code{\link{asne_plugin}},
  \code{\link{asne}}, \code{\link{hsjse_plugin}},
  \code{\link{hsnerv_plugin}}, \code{\link{hsnerv}},
  \code{\link{hssne_plugin}}, \code{\link{hssne}},
  \code{\link{jse_plugin}}, \code{\link{nerv_plugin}},
  \code{\link{nerv}}, \code{\link{plugin}},
  \code{\link{probability_embedding_methods}},
  \code{\link{rasne_plugin}}, \code{\link{rasne}},
  \code{\link{rssne_plugin}}, \code{\link{rssne}},
  \code{\link{rtsne_plugin}}, \code{\link{rtsne}},
  \code{\link{sjse_plugin}}, \code{\link{snerv_plugin}},
  \code{\link{snerv}}, \code{\link{ssne_plugin}},
  \code{\link{ssne}}, \code{\link{tasne_plugin}},
  \code{\link{tasne}}, \code{\link{tnerv_plugin}},
  \code{\link{tnerv}}, \code{\link{tsne_plugin}},
  \code{\link{tsne}}, \code{\link{uhsnerv_plugin}},
  \code{\link{uhsnerv}}, \code{\link{unerv_plugin}},
  \code{\link{usnerv_plugin}}, \code{\link{usnerv}}
}

