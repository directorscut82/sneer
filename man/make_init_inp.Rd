% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize_inp.R
\name{make_init_inp}
\alias{make_init_inp}
\title{Create an input initialization callback.}
\usage{
make_init_inp(perplexity = 30, input_weight_fn = exp_weight,
  keep_all_results = FALSE, verbose = TRUE)
}
\arguments{
\item{perplexity}{Target perplexity value for the probability distributions.}

\item{input_weight_fn}{Weighting function for distances. It should have the
signature \code{input_weight_fn(d2m, beta)}, where \code{d2m} is a matrix of
squared distances and \code{beta} is a real-valued scalar parameter which
will be varied as part of the search to produce the desired
\code{perplexity}. The function should return a matrix of weights
corresponding to the transformed squared distances passed in as arguments.}

\item{keep_all_results}{If \code{true} then the list returned by the callback
will also contain a vector of \code{beta} parameters that generated the
probability matrix. Otherwise, only the probability matrix is returned.}

\item{verbose}{If \code{TRUE} display messages about progress of
initialization.}
}
\value{
A callback function with signature \code{fn(xm)} where \code{xm}
is the input coordinates or a distance matrix. This function will return
a list containing:
\item{\code{xm}}{Input coordinates if these were provided.}
\item{\code{dm}}{Input distances.}
\item{\code{pm}}{Input probabilities.}
\item{\code{beta}}{Input weighting parameters that produced the
probabilities. Only provided if \code{keep_all_results} is \code{TRUE}.}
}
\description{
Factory function for input initialization callbacks. During input
initialization, the high dimensional distances or coordinates will be used
to generate the matrices necessary for the embedding, e.g. input distances
and probabilities.
}
\details{
The callback that is returned generates an input probability according
to the method described in the TSNE paper: for each point in the input
data, a probability distribution is generated with respect to all the
other points such that the perplexity of the distribution is a user-defined
value. This probability is suitable for use in the ASNE method. For SSNE
and TSNE a further processing stage is required to create a joint probability
over all pairs of points. This can be done in the \code{after_init} callback
available to the embedding methods.
}
\examples{
# Set target perplexity of each probability distribution to 30
make_init_inp(perplexity = 30)

# Set target perplexity of each probability distribution to 30 but use
# a different weighting function.
make_init_inp(perplexity = 30, input_weight_fn = sqrt_exp_weight)

# Perplexity of 50, and keep the values of the exponential parameter for
# later processing or reporting.
make_init_inp(perplexity = 50, keep_all_result = TRUE)

# Should be passed to the init_inp argument of an embedding function:
\dontrun{
 embed_sim(init_inp = make_init_inp(perplexity = 30,
                                    input_weight_fn = exp_weight), ...)
}
}
\seealso{
\code{\link{embed_sim}} for how to use this function for configuring
an embedding.
}

