% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optim_step.R
\name{bold_driver}
\alias{bold_driver}
\title{Bold Driver Step Size Method}
\usage{
bold_driver(inc_mult = 1.1, dec_mult = 0.5, inc_fn = partial(`*`,
  inc_mult), dec_fn = partial(`*`, dec_mult), init_step_size = 1,
  min_step_size = sqrt(.Machine$double.eps), max_step_size = NULL)
}
\arguments{
\item{inc_mult}{Multiplier of the current step size when the cost
decreases. Should be greater than one to increase the step size. This
parameter is ignored if \code{inc_fun} is supplied.}

\item{dec_mult}{Multiplier of the current step size when the cost
increases. Should be smaller than one to decrease the step size. This
parameter is ignored if \code{dec_fun} is supplied.}

\item{inc_fn}{Function to apply to the current step size when the cost
decreases. Should return a value greater than the current step size.}

\item{dec_fn}{Function to apply to the current step size when the cost
increases. Should return a value smaller than the current step size.}

\item{init_step_size}{Step size to attempt on the first step of
optimization.}

\item{min_step_size}{Minimum step size.}

\item{max_step_size}{Maximum step size.}
}
\value{
Bold driver step size method, to be used by the optimizer.
}
\description{
Factory function for creating an optimizer step size method.
}
\details{
This function configures the 'Bold Driver' method for step size selection.
At each iteration, the initial step size tried is a (normally conservative)
increase of the step size at the previous step. If this step size does not
result in a decrease in the cost, the step size is progressively reduced
(normally by a more drastic amount than the increase) until the cost
does decrease (or the minimum step size is reached).

This implementation is effectively a backtracking line search, but instead
of a Wolfe condition, a cost decrease is considered sufficient.
}
\examples{
# Use as part of the make_opt function for configuring an optimizer's
# step size method:
make_opt(step_size = bold_driver())
}
\seealso{
The return value of this function is intended for internal use of
the sneer framework only. See \code{\link{optimization_step_size_interface}}
for details on the functions and values defined for this method.

Other sneer optimization step size methods: \code{\link{constant_step_size}},
  \code{\link{jacobs}},
  \code{\link{optimization_step_size}},
  \code{\link{tsne_jacobs}}
}

