% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nerv.R
\name{nerv_cost}
\alias{nerv_cost}
\title{Neighbor Retrieval Visualizer (NeRV) Cost Function}
\usage{
nerv_cost(inp, out, method)
}
\arguments{
\item{inp}{Input data.}

\item{out}{Output data.}

\item{method}{Embedding method.}
}
\value{
NeRV cost.
}
\description{
A measure of embedding quality between input and output data.
}
\details{
This cost function evaluates the embedding quality by calculating a weighted
sum of two KL divergence calculations:

\deqn{C_{NeRV} = \lambda D_{KL}(P||Q) + (1-\lambda)D_{KL}(Q||P)}{C_NeRV = [lambda * KL(P||Q)] + [(1-lambda) * KL(Q||P)]}

where P is the input probability matrix, Q the output probability matrix, and
\eqn{\lambda}{lambda} is a weighting factor between zero and one.

This cost function requires the following matrices and values to be defined:
\describe{
 \item{\code{inp$pm}}{Input probabilities.}
 \item{\code{out$qm}}{Output probabilities.}
 \item{\code{method$cost$lambda}}{Weighting factor between 0 and 1.}
}
}
\references{
Venna, J., Peltonen, J., Nybo, K., Aidos, H., & Kaski, S. (2010).
Information retrieval perspective to nonlinear dimensionality reduction for
data visualization.
\emph{Journal of Machine Learning Research}, \emph{11}, 451-490.
}
\seealso{
Other sneer cost functions: \code{\link{jse_cost}},
  \code{\link{kruskal_stress_cost}},
  \code{\link{mean_relative_error_cost}},
  \code{\link{metric_sstress_cost}},
  \code{\link{metric_stress_cost}},
  \code{\link{normalized_stress_cost}},
  \code{\link{reverse_kl_cost}},
  \code{\link{rms_metric_stress_cost}},
  \code{\link{sammon_stress_cost}},
  \code{\link{sammon_stress_unnorm_cost}}
}

