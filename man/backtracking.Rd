% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/backtrack.R
\name{backtracking}
\alias{backtracking}
\title{Step Size By Backtracking Line Search}
\usage{
backtracking(c1 = 0.1, rho = 0.8, max_step_size = 1,
  min_step_size = .Machine$double.eps, stop_at_min = TRUE)
}
\arguments{
\item{c1}{Constant for the sufficient decrease condition.}

\item{rho}{Factor to decrease alpha by.}

\item{max_step_size}{Initial step length to start the search at.}

\item{min_step_size}{If the step length falls below this value, exit the
line search for this iteration and use this value.}

\item{stop_at_min}{If \code{TRUE} and the step size was \code{min_step_size},
terminate the optimization.}
}
\value{
A step size method for use with an optimizer.
}
\description{
Step size method.
}
\details{
Uses the Backtracking line search method to find a step length that fulfills
the Wolfe conditions: the sufficient decrease condition (or Armijo conditon)
and the curvature condition.
}
\examples{
# Use as part of the make_opt function for configuring an optimizer's
# step size method:
make_opt(step_size = backtracking(c1 = 0.1, rho = 0.8))
}
\references{
Nocedal, J., & Wright, S. (2006).
\emph{Numerical optimization.}
Springer Science & Business Media.
}
\seealso{
Other sneer optimization step size methods: \code{\link{bold_driver}},
  \code{\link{constant_step_size}}, \code{\link{jacobs}},
  \code{\link{optimization_step_size}},
  \code{\link{tsne_jacobs}}
}

